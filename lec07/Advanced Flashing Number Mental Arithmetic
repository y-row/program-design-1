/*******************************************************************
Input
First line consist of a integer N, represents how many number to sum.

1 <= N <= 1,000

Followed by N lines, each consists of 2 integers, S and K.

S denotes the base of K.

S ∈ {6, 8, 10, 16} , 0 <= K <= DEC999,999,999

If K is Base-6, or Base-10, its written normally.

If K is Base-8, it will have prefix "0". (e.g. 0123, 0777)

If K is Base 16, it will have prefix "0x". (e.g. 0x41414141, 0xDEADBEAF)

Output
output a integer, that is the sum of all input K, mod 1,000,000,007.
**********************************************************************/

/***********想法******************************************************
 * 1.int n=個數
 * scanf("%d",&k);switch(k)選6或10或16或8
 * 數值存入一個數字x(unsigned long int)
 *
 * 2.6進位的轉換：
 * unsigned long int d=1,sum=0;
 * while(x!=0)
 * {
 *      sum+=(x%10)*d;
 *      d*=6;
 *      x/=10;
 * }
 *d=1;
 * 3.在結果產生前後mod
 *
 ********************************************************************/

/******answer******/
#include<stdio.h>
int main ()
{
    int n,k;
    unsigned long long int sum=0,x;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        scanf("%d",&k);
        switch(k)
        {
            case 10:
                scanf("%llu",&x);
                break;
            case 8:
                scanf("%llo",&x);
                break;
            case 16:
                scanf("%llx",&x);
                break;
            case 6:
                scanf("%llu",&x);
                unsigned long long int m=1,x_covert=0;
                while(x!=0)
                {
                    x_covert+=(x%10)*m;
                    m*=6;
                    x/=10;
                }
                x=x_covert;
                break;
        }
        sum+=(x% 1000000007);
        sum%=1000000007;
    }
    printf("%llu",sum);
    return 0;
}
